//등차수열
class Solution {
    public int solution(int a, int d, boolean[] included) {
        int answer = 0;
    
        for(int i= 0; i< included.length; i++){
            if(included[i]){
                answer += a + i * d;
            }               
        }
        return answer;
    }
}

//코드 처리하기
class Solution {
    public String solution(String code) {
        String ret = "";
        int mode = 0;
        for (int i = 0; i < code.length(); i++) {
            if (code.charAt(i) == '1') mode = 1 - mode;
            else if (i % 2 == mode) ret += code.charAt(i);
        }
        return ret.length() == 0 ? "EMPTY" : ret;
    }
}

// 주사위
class Solution {
    public int solution(int a, int b, int c) {
        int answer = a + b + c;

        if(a == b && b == c){
            answer = answer * ( a * a + b * b + c * c )*( a * a * a + b * b * b + c * c * c);
        }else if(a == b || a == c || b == c){
            answer = answer * (a * a + b * b + c * c);
        }
        return answer;
    }
}

//원소의 곱, 합
class Solution {
    public int solution(int[] num_list) {
        int sum = 0;
        int gop = 1;
        
        for(int i = 0; i < num_list.length; i++){
            sum += num_list[i];
            gop *= num_list[i];
        }
        
        
        return gop < (sum * sum) ? 1 : 0;
        
    }
}
